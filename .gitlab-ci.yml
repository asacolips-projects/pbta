image: node:12

before_script:
  - apt-get update
  - apt-get install zip

cache:
  paths:
    - node_modules/

stages:
  - init
  - build
  - deploy

############### BETA ################

# TODO: Automatic beta builds are disabled in favor of tagged releases.

# init-beta:
#   stage: init
#   image: docker:latest
#   variables:
#     VAR_NAME: BETA_BUILD_NUMBER
#     TOKEN: ${CI_PIPELINE_IID_TOKEN}
#     GITLAB_URL: "https://gitlab.com"
#   before_script:
#   - apk add --update curl jq
#   script:
#   - "VAR=$(curl -s -f  --header \"PRIVATE-TOKEN: ${TOKEN}\" \"${GITLAB_URL}/api/v4/projects/${CI_PROJECT_ID}/variables/${VAR_NAME}\" | jq  -r '.value' ) "
#   - let VAR=VAR+1
#   - "curl -s -f --request PUT --header \"PRIVATE-TOKEN: ${TOKEN}\" \"${GITLAB_URL}/api/v4/projects/${CI_PROJECT_ID}/variables/${VAR_NAME}\" --form \"value=${VAR}\" "
#   only:
#     - beta

# build-beta:
#   stage: build
#   script:
#     - export
#     - npm ci
#     - npm run build
#     - node update-build-tags.js --branch=$CI_COMMIT_BRANCH --gitlabpath=$CI_PROJECT_PATH --jobname=$CI_JOB_NAME --versionpost=$BETA_BUILD_NUMBER
#     - cp ./dist/system.json ./system.json
#     - mv dist pbta
#     - zip -q pbta.zip -r pbta
#   artifacts:
#     paths:
#       - pbta.zip
#       - system.json
#   only:
#     - beta

############### STABLE ################

build-prod:
  stage: build
  script:
    - export
    - npm ci
    - npm run build
    - node update-build-tags.js --branch='master' --gitlabpath=$CI_PROJECT_PATH --jobname=$CI_JOB_NAME  --tag=$CI_COMMIT_TAG
    - cp ./dist/system.json ./system.json
    - mv dist pbta
    - zip -q pbta.zip -r pbta
  artifacts:
    paths:
      - pbta.zip
      - system.json
  only:
    # Examples: 0.1.0, 0.1.2.beta-1, 0.3.4.alpha
    # At least one digit + period, followed by additional digits, followed by an optional beta/alpha, followed by a build number.
    - /^(\d+\.)+(\d+)*((beta|alpha)+(-)*\d+)*$/i
  except:
    - branches

############### PATREON ################

# build-patreon:
#   stage: build
#   script:
#     - export
#     - npm ci
#     - npm run build
#     - node update-build-tags.js --branch=$CI_COMMIT_TAG --gitlabpath=$CI_PROJECT_PATH --jobname=$CI_JOB_NAME  --tag=$CI_COMMIT_TAG
#     - cp ./dist/system.json ./system.json
#     - mv dist pbta
#     - zip -q pbta.zip -r pbta
#   artifacts:
#     paths:
#       - pbta.zip
#       - system.json
#   only:
#     # Example: alpha20-0.1.0
#     - /^alpha\d+-\d+.*$/i
#   except:
#     - branches

# deploy-patreon:
#   stage: deploy
#   image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
#   # TODO: Azure Upload
#   # image: microsoft/azure-cli
#   dependencies:
#     - build-patreon
#   script:
#     - aws configure set region us-east-1
#     - aws s3 cp ./pbta.zip s3://$S3_BUCKET/pbta/$CI_COMMIT_TAG/pbta.zip
#     - aws s3 cp ./system.json s3://$S3_BUCKET/pbta/$CI_COMMIT_TAG/system.json
#     # TODO: Azure upload
#     # - az storage blob upload-batch --connection-string $AZ_STORAGE_CONNECTION_STRING --source ./pbta.zip --destination pbta --destination-path $CI_COMMIT_TAG
#     # - az storage blob upload-batch --connection-string $AZ_STORAGE_CONNECTION_STRING --source ./system.json --destination pbta --destination-path $CI_COMMIT_TAG
#   only:
#     # Example: alpha20-0.1.0
#     - /^alpha\d+-\d+.*$/i
#   except:
#     - branches